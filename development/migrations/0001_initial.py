# Generated by Django 4.1 on 2023-02-24 08:58

import development.task.hooks.postprocessing
import development.task.hooks.preprocessing
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_ckeditor_5.fields
import django_lifecycle.mixins
import utils.models.validators
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Feature',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('median_cost', models.DecimalField(decimal_places=2, max_digits=10, null=True, validators=[utils.models.validators.positive_validator], verbose_name='Median Cost ($)')),
                ('min_cost', models.DecimalField(decimal_places=2, max_digits=10, null=True, validators=[utils.models.validators.positive_validator], verbose_name='Minimum Cost ($)')),
                ('max_cost', models.DecimalField(decimal_places=2, max_digits=10, null=True, validators=[utils.models.validators.positive_validator], verbose_name='Maximum Cost ($)')),
                ('median_delivery_end_date', models.DateTimeField(blank=True, null=True, verbose_name='Median Delivery End Date')),
                ('min_delivery_end_date', models.DateTimeField(blank=True, null=True, verbose_name='Minimum Delivery End Date')),
                ('max_delivery_end_date', models.DateTimeField(blank=True, null=True, verbose_name='Maximum Delivery End Date')),
                ('median_hours_for_delivery', models.DecimalField(decimal_places=2, max_digits=10, null=True, validators=[utils.models.validators.positive_validator], verbose_name='Median Hours For Delivery')),
                ('min_hours_for_delivery', models.DecimalField(decimal_places=2, max_digits=10, null=True, validators=[utils.models.validators.positive_validator], verbose_name='Minimum Hours For Delivery')),
                ('max_hours_for_delivery', models.DecimalField(decimal_places=2, max_digits=10, null=True, validators=[utils.models.validators.positive_validator], verbose_name='Maximum Hours For Delivery')),
                ('start_date', models.DateTimeField(blank=True, null=True, verbose_name='Start Date')),
                ('created_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='Created At')),
                ('qa_status', models.CharField(choices=[('waiting', 'Waiting'), ('ready_to_test', 'Ready To Test'), ('passed', 'Passed'), ('reverted', 'Reverted')], default='waiting', max_length=255, verbose_name='QA Status')),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High')], max_length=255, null=True, verbose_name='Priority')),
                ('title', models.CharField(max_length=255, null=True, verbose_name='Title')),
            ],
            options={
                'verbose_name': 'Feature',
                'verbose_name_plural': 'Features',
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('estimated_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[utils.models.validators.positive_validator], verbose_name='Estimated Cost ($)')),
                ('current_status', models.CharField(blank=True, choices=[('active_development', 'Active Development'), ('supporting', 'Supporting'), ('closed_for_good', 'Closed For Good')], max_length=255, null=True, verbose_name='Current Status')),
                ('sale_status', models.CharField(choices=[('lost', 'Lost'), ('closed', 'Closed'), ('negotiation', 'Negotiation'), ('proposal', 'Proposal'), ('qualified_to_buy', 'Qualified To Buy'), ('new', 'New')], max_length=255, null=True, verbose_name='Sale Status')),
                ('priority', models.CharField(blank=True, choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High')], max_length=255, null=True, verbose_name='Priority')),
                ('title', models.CharField(max_length=255, null=True, verbose_name='Title')),
                ('excpected_end', models.DateTimeField(blank=True, null=True, verbose_name='Expected End')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Created At')),
            ],
            options={
                'verbose_name': 'Project',
                'verbose_name_plural': 'Projects',
            },
        ),
        migrations.CreateModel(
            name='Stage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('median_cost', models.DecimalField(decimal_places=2, max_digits=10, null=True, validators=[utils.models.validators.positive_validator], verbose_name='Median Cost ($)')),
                ('min_cost', models.DecimalField(decimal_places=2, max_digits=10, null=True, validators=[utils.models.validators.positive_validator], verbose_name='Minimum Cost ($)')),
                ('max_cost', models.DecimalField(decimal_places=2, max_digits=10, null=True, validators=[utils.models.validators.positive_validator], verbose_name='Maximum Cost ($)')),
                ('median_hours_for_delivery', models.DecimalField(decimal_places=2, max_digits=10, null=True, validators=[utils.models.validators.positive_validator], verbose_name='Median Hours For Delivery')),
                ('min_hours_for_delivery', models.DecimalField(decimal_places=2, max_digits=10, null=True, validators=[utils.models.validators.positive_validator], verbose_name='Minimum Hours For Delivery')),
                ('max_hours_for_delivery', models.DecimalField(decimal_places=2, max_digits=10, null=True, validators=[utils.models.validators.positive_validator], verbose_name='Maximum Hours For Delivery')),
                ('title', models.CharField(max_length=255, null=True, verbose_name='Title')),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='stages', to='development.project', verbose_name='Project')),
            ],
            options={
                'verbose_name': 'Stage',
                'verbose_name_plural': 'Stages',
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('median_cost', models.DecimalField(decimal_places=2, max_digits=10, null=True, validators=[utils.models.validators.positive_validator], verbose_name='Median Cost ($)')),
                ('min_cost', models.DecimalField(decimal_places=2, max_digits=10, null=True, validators=[utils.models.validators.positive_validator], verbose_name='Minimum Cost ($)')),
                ('max_cost', models.DecimalField(decimal_places=2, max_digits=10, null=True, validators=[utils.models.validators.positive_validator], verbose_name='Maximum Cost ($)')),
                ('median_delivery_end_date', models.DateTimeField(blank=True, null=True, verbose_name='Median Delivery End Date')),
                ('min_delivery_end_date', models.DateTimeField(blank=True, null=True, verbose_name='Minimum Delivery End Date')),
                ('max_delivery_end_date', models.DateTimeField(blank=True, null=True, verbose_name='Maximum Delivery End Date')),
                ('median_hours_for_delivery', models.DecimalField(decimal_places=2, max_digits=10, null=True, validators=[utils.models.validators.positive_validator], verbose_name='Median Hours For Delivery')),
                ('min_hours_for_delivery', models.DecimalField(decimal_places=2, max_digits=10, null=True, validators=[utils.models.validators.positive_validator], verbose_name='Minimum Hours For Delivery')),
                ('max_hours_for_delivery', models.DecimalField(decimal_places=2, max_digits=10, null=True, validators=[utils.models.validators.positive_validator], verbose_name='Maximum Hours For Delivery')),
                ('median_development_end_date', models.DateTimeField(blank=True, null=True, verbose_name='Median Development End Date')),
                ('min_development_end_date', models.DateTimeField(blank=True, null=True, verbose_name='Minimum Development End Date')),
                ('max_development_end_date', models.DateTimeField(blank=True, null=True, verbose_name='Maximum Development End Date')),
                ('median_hours_for_development', models.DecimalField(decimal_places=2, max_digits=10, null=True, validators=[utils.models.validators.positive_validator], verbose_name='Median Hours For Development')),
                ('min_hours_for_development', models.DecimalField(decimal_places=2, max_digits=10, null=True, validators=[utils.models.validators.positive_validator], verbose_name='Minimum Hours For Development')),
                ('max_hours_for_development', models.DecimalField(decimal_places=2, max_digits=10, null=True, validators=[utils.models.validators.positive_validator], verbose_name='Maximum Hours For Development')),
                ('description', django_ckeditor_5.fields.CKEditor5Field(null=True, verbose_name='Description')),
                ('risk', models.DecimalField(decimal_places=2, max_digits=3, null=True, validators=[utils.models.validators.positive_validator], verbose_name='Risk')),
                ('rate', models.DecimalField(decimal_places=2, max_digits=10, null=True, validators=[utils.models.validators.positive_validator], verbose_name='Rate ($)')),
                ('complexity', models.CharField(choices=[('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5')], max_length=255, null=True, verbose_name='Complexity')),
                ('status', models.CharField(choices=[('created', 'Created'), ('in_progress', 'In Progress'), ('on_validation', 'On Validation'), ('completed', 'Completed')], default='created', max_length=255, verbose_name='Status')),
                ('title', models.CharField(max_length=255, null=True, verbose_name='Title')),
                ('start_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Start Date')),
                ('feature', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='development.feature', verbose_name='Feature')),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='development.project', verbose_name='Project')),
                ('staff', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tasks', to=settings.AUTH_USER_MODEL, verbose_name='Staff')),
                ('stage', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='development.stage', verbose_name='Stage')),
            ],
            options={
                'verbose_name': 'Task',
                'verbose_name_plural': 'Tasks',
            },
            bases=(development.task.hooks.postprocessing.PostprocessingHandlers, development.task.hooks.preprocessing.PreprocessingHandlers, django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
        migrations.AddField(
            model_name='feature',
            name='project',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='features', to='development.project', verbose_name='Project'),
        ),
        migrations.AddField(
            model_name='feature',
            name='stage',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='features', to='development.stage', verbose_name='Stage'),
        ),
        migrations.CreateModel(
            name='Bug',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', django_ckeditor_5.fields.CKEditor5Field(null=True, verbose_name='Description')),
                ('title', models.CharField(max_length=255, null=True, verbose_name='Title')),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='bugs', to='development.project', verbose_name='Project')),
                ('task', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='bugs', to='development.task', verbose_name='Task')),
            ],
            options={
                'verbose_name': 'Bug',
                'verbose_name_plural': 'Bugs',
            },
        ),
    ]
